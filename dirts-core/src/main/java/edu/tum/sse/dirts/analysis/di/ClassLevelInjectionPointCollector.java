/*
 * Copyright 2022. The dirts authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
package edu.tum.sse.dirts.analysis.di;

import com.github.javaparser.ast.body.AnnotationDeclaration;
import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
import com.github.javaparser.ast.body.EnumDeclaration;
import com.github.javaparser.ast.body.TypeDeclaration;

/**
 * Collects InjectionPoints represented by class level nodes
 */
public interface ClassLevelInjectionPointCollector extends InjectionPointCollector<TypeDeclaration<?>> {

    /*
    Since generally all subclasses extend VoidVisitor, it is unfortunately not a compilation error
    if a subclass forgets to directly implement one of those methods

    Nevertheless, this can be used to check for completeness by clicking on the green circle on the left
    of each method generated by IntelliJ
     */

    void visit(ClassOrInterfaceDeclaration n, InjectionPointStorage arg);

    void visit(EnumDeclaration n, InjectionPointStorage arg);

    void visit(AnnotationDeclaration n, InjectionPointStorage arg);
}
